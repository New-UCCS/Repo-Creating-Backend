from github import Github
import os
import time
from datetime import datetime

# ==========================Tokens=================================

token = os.getenv('SCRUBBED:username', 'SCRUBBED:token')
g = Github(token)

# ==========================Variables==============================

organizations = {
    organization.name: organization for organization in g.get_user().get_orgs()}
org = organizations["UCCS "]

list_repos = [y for y in org.get_repos()]

parsed_repos = []
for repo in list_repos:
    parsed_repos.append(repo.name)

teams = {team.name: team for team in org.get_teams()}

members_org = {member.login: member for member in org.get_members()}

# ==========================Functions==============================

def add_repo(team, member, time_now):

    members = {member: member for member in team.get_members()}
    active_user = g.get_user(member)
    users_teams = []
    for member_key in members.keys():
        if (member in member_key.login):
            users_teams.append(team.id)
        else:
            #print("Repository: user is not in team ", time_now)
            pass
    try:
        if str(member) not in parsed_repos:
            created = org.create_repo(str(member),
                                      description="A repository for {}. (AutoGenerated)".format(
                                          member),
                                      license_template="mit")
            print("Repository: created ", time_now)
            try:
                created.add_to_collaborators(active_user,
                                             permission="admin")
            except:
                print("Repository: user is already admin ", time_now)
            try:
                for id in users_teams:
                    current_team = org.get_team(id)
                    current_team.add_to_repos(created)
            except:
                print("Repository: team already attached ", time_now)

        else:
            print("Repository: already exists: Perms done ", time_now)

    except Exception as e:
        print("Error while creating repository\nError:\t\t\t\t\t", str(e))
        #print("Repository: user is already updated ", time_now)
        pass

# ==========================Loop===================================

def loop():
    time_now = datetime.now()
    for team in teams.values():
        for member in members_org:
            add_repo(team,
                     member,
                     time_now)

# ==========================Start==================================

while True:
    loop()
    time.sleep(60)
